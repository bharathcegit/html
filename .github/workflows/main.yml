name: Deploy to Apache2

on:
  push:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "984303072552"
  HOST: ${{ secrets.HOST }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to AWS ECR
      run: |
        echo ++++++++++++++++++++++++++++++
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 984303072552.dkr.ecr.us-east-1.amazonaws.com
    - name: Build and push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      run: |
        # Build the Docker image
        docker build -t html .
        # Push the Docker image to ECR
        docker tag html:latest 984303072552.dkr.ecr.us-east-1.amazonaws.com/html:latest
        docker push 984303072552.dkr.ecr.us-east-1.amazonaws.com/html:latest
           
    - uses: actions/checkout@v2 
    - name: Build & Deploy
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOSTNAME: ${{secrets.HOST}}
        USER_NAME: ${secrets.USER}
  
        script: |
            # Pull the latest Docker image from ECR
            docker pull 984303072552.dkr.ecr.us-east-1.amazonaws.com/html:latest

            # Stop and remove the existing container
            docker stop html-container || true
            docker rm html-container || true

            # Run the new container with the updated image
            docker run -d --name html-container -p 80:80 984303072552.dkr.ecr.us-east-1.amazonaws.com/html:latest

        
